{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","correctUrl","useState","Math","random","toString","slice","id","touched","setTouched","hasError","incorrectLink","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","titleValue","setTitleValue","descriptionValue","setDescriptionValue","imageValue","setImageValue","imdbUrlValue","setImdbUrlValue","imdbIdValue","setImdbIdValue","count","setCount","pattern","fillInput","test","notEmpty","onSubmit","preventDefault","prevCount","onAddMovie","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8567b90.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ninterface Props {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  correctUrl?: boolean,\n}\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  correctUrl = true,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n  const incorrectLink = touched && !correctUrl;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {incorrectLink && (\n        <p className=\"help is-danger\">{`${label} is incorrect`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState, FormEvent } from 'react';\nimport classNames from 'classnames';\nimport { TextField } from '../TextField';\n\ninterface Props {\n  onAdd: (\n    title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string,\n  ) => void;\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [titleValue, setTitleValue] = useState('');\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [imageValue, setImageValue] = useState('');\n  const [imdbUrlValue, setImdbUrlValue] = useState('');\n  const [imdbIdValue, setImdbIdValue] = useState('');\n\n  const [count, setCount] = useState(0);\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const fillInput\n    = titleValue\n    && imageValue\n    && imdbUrlValue\n    && imdbIdValue;\n\n  const correctUrl\n    = pattern.test(imageValue)\n    && pattern.test(imdbUrlValue);\n\n  const notEmpty = /\\S+/.test(titleValue) && /\\S+/.test(imdbIdValue);\n\n  const onAddMovie = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (fillInput && correctUrl && notEmpty) {\n      setTitleValue('');\n      setDescriptionValue('');\n      setImageValue('');\n      setImdbUrlValue('');\n      setImdbIdValue('');\n\n      onAdd(\n        titleValue,\n        descriptionValue,\n        imageValue,\n        imdbUrlValue,\n        imdbIdValue,\n      );\n\n      setCount((prevCount) => prevCount + 1);\n    }\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event) => onAddMovie(event)}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={titleValue}\n        onChange={setTitleValue}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={descriptionValue}\n        onChange={setDescriptionValue}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imageValue}\n        onChange={setImageValue}\n        correctUrl={correctUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrlValue}\n        onChange={setImdbUrlValue}\n        correctUrl={correctUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbIdValue}\n        onChange={setImdbIdValue}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className={classNames(\n              'button is-link',\n              {\n                'button is-link is-light':\n                  !fillInput\n                  || !correctUrl\n                  || !notEmpty,\n              },\n            )}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const onAdd = (\n    title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string,\n  ) => {\n    setMovies([...movies, {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    }]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={onAdd}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}